//Yunus Emre Gumus
//151331197
//workshop2

Question 1.)

It prints 10.119999999999999, because estimation of the decimal fraction in 10.12 is different from the estimation of the constant 10.12.
When we calculate the exact value of 0.12, we will get 10.1199999999999992184029906638897955417633056640625.
%.15lf gives us numbers with 15 decimal places.
In conclusion, we get the value 10.119999999999999.

Question 2.)
a) intValue %2
The range is between 0 and 1.
b) intValue % 3%		
The range is between 0 and 2.
c) intValue 100%
The range is between 0 and 99.

Question 3.)
int wholePizzasEaten = totalSlices / estimatedSlicesConsumed
int extraSlicesNeeded = totalSlices % estimatedSlicesConsumed

Question 4.)
Because doing it in integers and then converting to a suitable display format at the last minute is often easier and safer than attempting to execute arithmetic in floating-point formats.


This workshop taught me a lot. I learned how to do simple calculations, division for finding amounts, using modulus to find the remainder, converting from double to int, and rounding fractional numbers to the nearest whole number in C programming.
In part1 I use modulus for cents but with pennies and nickels, it's even better.
I found that modulus is a big time saver since it's doing two processes at once ((/) + (-)) and when I think about this I write this expression somewhere to remind myself what is it. It looks like a pirate with an eye band on one of his eyes and I found this funny.
I would never forget about modulus now.